{"version":3,"sources":["assets/file.svg","components/productList/style.js","components/product/style.js","components/product/index.js","components/productList/index.js","components/fileUploader/style.js","components/fileUploader/index.js","theme/globalStyle.js","App.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["module","exports","ProductListWrap","styled","div","Scrollable","Product","active","Thumbnail","img","Description","props","product","useState","checked","setChecked","key","id","justifyBetween","alignCenter","contentCenter","full","onChange","e","checkedHandler","target","className","src","thumbnail","alt","name","sell_id","style","marginLeft","sku","basis","placeholder","width","console","log","value","val","Option","products","map","item","index","updateCount","StyledCard","draggerProps","listType","multiple","action","info","status","file","fileList","message","success","error","Dragger","type","gutter","xs","sm","md","height","paddingBottom","lg","span","order","component","fileLogo","href","defaultTheme","primaryDark","primaryLight","fontColor","GlobalStyle","createGlobalStyle","theme","FullHeightTabs","Footer","Flex","attrs","column","alignEnd","justifyCenter","FlexWrapper","StyledButton","TabPane","Boolean","window","location","hostname","match","ReactDOM","render","isLoading","setIsLoading","state","setState","useEffect","a","async","axios","get","response","prevState","data","fetchProducts","infoLink","selectedProducts","filter","tip","spinning","length","defaultActiveKey","animated","tabBarExtraContent","display","flexFlow","flexGrow","tab","isChecked","onClick","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35016c9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/file.c7510286.svg\";","import styled from 'styled-components';\r\n\r\nexport const ProductListWrap = styled.div`\r\n\tposition: relative;\r\n\tflex-grow: 1;\r\n`;\r\n\r\nexport const Scrollable = styled.div`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\toverflow-y: scroll;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Product = styled.div`\r\n\tdisplay: flex;\r\n\tuser-select: none;\r\n\tflex-flow: row wrap;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tpadding: 16px;\r\n\tborder-bottom: 1px solid #e5e5e5;\r\n\tbackground-color: ${({ active }) => (active ? '#f2f2f2' : '')};\r\n`;\r\n\r\nconst Thumbnail = styled.img`\r\n\theight: 60px;\r\n\twidth: 60px;\r\n\tmargin: 16px;\r\n`;\r\n\r\nconst Description = styled.div`\r\n\ttext-align: left;\r\n\th4 {\r\n\t\tfont-size: 15px;\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n\tspan {\r\n\t\tcolor: #b7b7b7;\r\n\t\t&:nth-child(1) {\r\n\t\t\tmargin-left: 20px;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nProduct.Description = Description;\r\nProduct.Thumbnail = Thumbnail;\r\n\r\nexport default Product;\r\n","import React, { useState } from 'react';\r\nimport Flex, { FlexItem } from 'styled-flex-component';\r\nimport { Product } from './style';\r\nimport { Checkbox, Input, Select } from 'antd';\r\n\r\nexport default props => {\r\n\tconst { product } = props;\r\n\tconst [checked, setChecked] = useState(false);\r\n\r\n\treturn (\r\n\t\t<Product key={product.id} active={checked}>\r\n\t\t\t<Flex justifyBetween alignCenter contentCenter full>\r\n\t\t\t\t<Flex alignCenter>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tchecked={checked}\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\tprops.checkedHandler(product.id, e.target.checked);\r\n\t\t\t\t\t\t\tsetChecked(e.target.checked);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></Checkbox>\r\n\t\t\t\t\t<Product.Thumbnail\r\n\t\t\t\t\t\tclassName='thumbnail'\r\n\t\t\t\t\t\tsrc={product.thumbnail}\r\n\t\t\t\t\t\talt='Thumbnail'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Product.Description className='description'>\r\n\t\t\t\t\t\t<h4>{product.name}</h4>\r\n\t\t\t\t\t\t<span>Sell ID: {product.sell_id} </span>\r\n\t\t\t\t\t\t<span style={{ marginLeft: 16 }}>SKU: {product.sku}</span>\r\n\t\t\t\t\t</Product.Description>\r\n\t\t\t\t</Flex>\r\n\r\n\t\t\t\t<FlexItem basis='340px'>\r\n\t\t\t\t\t<Flex alignCenter justifyBetween>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tplaceholder='Enter Sell ID'\r\n\t\t\t\t\t\t\tname={`input${product.id}`}\r\n\t\t\t\t\t\t\tstyle={{ width: 160 }}\r\n\t\t\t\t\t\t\tonChange={e => console.log(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tname={`select${product.id}`}\r\n\t\t\t\t\t\t\tplaceholder='Select source site'\r\n\t\t\t\t\t\t\tstyle={{ width: 160 }}\r\n\t\t\t\t\t\t\tonChange={val => console.log(val)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Select.Option value='Amazon'>Amazon</Select.Option>\r\n\t\t\t\t\t\t\t<Select.Option value='eBay'>eBay</Select.Option>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</FlexItem>\r\n\t\t\t</Flex>\r\n\t\t</Product>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { ProductListWrap, Scrollable } from './style';\r\nimport Product from 'components/product/';\r\nexport default props => {\r\n\treturn (\r\n\t\t<ProductListWrap>\r\n\t\t\t<Scrollable>\r\n\t\t\t\t{props.products.map((item, index) => (\r\n\t\t\t\t\t<Product\r\n\t\t\t\t\t\tproduct={item}\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tcheckedHandler={props.updateCount}\r\n\t\t\t\t\t></Product>\r\n\t\t\t\t))}\r\n\t\t\t</Scrollable>\r\n\t\t</ProductListWrap>\r\n\t);\r\n};\r\n","import styled from 'styled-components';\r\nimport { Card } from 'antd';\r\n\r\nexport const StyledCard = styled(Card)`\r\n\theight: 100%;\r\n\r\n\tul {\r\n\t\tlist-style-type: square;\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { Upload, Icon, message, Row, Col } from 'antd';\r\nimport { StyledCard } from './style';\r\nimport fileLogo from 'assets/file.svg';\r\n\r\nconst draggerProps = {\r\n\tname: 'file',\r\n\tlistType: 'text',\r\n\tmultiple: false,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\tconsole.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\nconst { Dragger } = Upload;\r\n\r\nexport default props => {\r\n\treturn (\r\n\t\t<Row\r\n\t\t\ttype='flex'\r\n\t\t\tgutter={{ xs: 8, sm: 16, md: 24 }}\r\n\t\t\tstyle={{ height: '100%', paddingBottom: 42 }}\r\n\t\t>\r\n\t\t\t<Col lg={{ span: 18, order: 1 }} xs={{ span: 24, order: 2 }}>\r\n\t\t\t\t<Dragger {...draggerProps}>\r\n\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t<Icon component={() => <img src={fileLogo} alt='' />} />\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p className='ant-upload-text blue-7'>\r\n\t\t\t\t\t\tClick or drag file to this area to upload\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\tSupport for a single or bulk upload. Strictly prohibit from\r\n\t\t\t\t\t\tuploading company data or other band files\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Dragger>\r\n\t\t\t</Col>\r\n\t\t\t<Col lg={{ span: 6, order: 2 }} xs={{ span: 24, order: 1 }}>\r\n\t\t\t\t<StyledCard>\r\n\t\t\t\t\t<h4>CSV Format</h4>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tThe file must be a CSV file with the and should include the next\r\n\t\t\t\t\t\tfields as the names of the columns:\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>ProductID</li>\r\n\t\t\t\t\t\t<li>title</li>\r\n\t\t\t\t\t\t<li>price</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<a href='#'>View help section</a>\r\n\t\t\t\t</StyledCard>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport styled from 'styled-components';\r\nimport Flex from 'styled-flex-component';\r\nimport { Tabs, Button } from 'antd';\r\n\r\nexport const defaultTheme = {\r\n\tprimaryDark: '#E49E4C',\r\n\tprimaryLight: '#EA8C1F',\r\n\tfontColor: '#5A5859'\r\n};\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\t@import url('https://fonts.googleapis.com/css?family=Rubik:500&display=swap');\r\n\t@import url('https://rsms.me/inter/inter.css');\r\n\tbody {\r\n\t\tfont-family: 'Inter';\r\n\t\tcolor: ${props => props.theme.fontColor};\r\n\t\tmax-height: 100vh;\r\n\t\tfont-weight:500;\r\n\t}\r\n\th1 {\r\n\t\tfont-family: 'Rubik';font-weight: 500;\r\n\t}\r\n\r\n\th1,\r\n\th2,\r\n\th3,\r\n\th4 {\r\n\t\tcolor: ${props => props.theme.fontColor};\t\r\n\t}\r\n`;\r\n\r\nexport const FullHeightTabs = styled(Tabs)`\r\n\t&,\r\n\t.ant-tabs-top-content > .ant-tabs-tabpane.ant-tabs-tabpane-active,\r\n\t.ant-tabs-top-content {\r\n\t\tdisplay: flex;\r\n\t\tflex-flow: column nowrap;\r\n\t\tflex-grow: 1;\r\n\t}\r\n\r\n\t.ant-tabs-nav .ant-tabs-tab:hover {\r\n\t\tanimation: 0s !important;\r\n\t}\r\n\r\n\t.ant-tabs-nav .ant-tabs-tab {\r\n\t\tpadding: 14px 9px;\r\n\t}\r\n\r\n\t.ant-tabs-ink-bar {\r\n\t\tbackground-color: ${props => props.theme.primaryDark};\r\n\t\theight: 4px;\r\n\t}\r\n`;\r\n\r\nexport const Footer = styled(Flex).attrs(() => ({\r\n\tcolumn: true,\r\n\talignEnd: true,\r\n\tjustifyCenter: true\r\n}))`\r\n\tborder-top: 1px solid #f2f2f2;\r\n\theight: 100px;\r\n`;\r\n\r\nexport const FlexWrapper = styled(Flex).attrs(() => ({\r\n\tcolumn: true\r\n}))`\r\n\tpadding: 40px;\r\n\theight: 100vh;\r\n\t@media (max-width: 768px) {\r\n\t\tpadding: 18px;\r\n\t}\r\n`;\r\nexport const StyledButton = styled(Button)`\r\n\t&.ant-btn {\r\n\t\tfont-size: 15px;\r\n\t\twidth: 143px;\r\n\t}\r\n`;\r\n","import React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport 'antd/dist/antd.less';\nimport { Spin } from 'antd';\n\nimport ProductList from './components/productList';\nimport FileUploader from './components/fileUploader';\n\nimport {\n\tStyledButton,\n\tdefaultTheme,\n\tFlexWrapper,\n\tGlobalStyle,\n\tFooter,\n\tFullHeightTabs\n} from './theme/globalStyle';\n\nimport axios from 'axios';\n\nconst { TabPane } = FullHeightTabs;\n\nexport default function App() {\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst [state, setState] = useState({\n\t\tproducts: []\n\t});\n\n\tuseEffect(() => {\n\t\tasync function fetchProducts() {\n\t\t\tconst url = 'https://autodsmock.herokuapp.com/products';\n\t\t\tsetIsLoading(true);\n\t\t\tconst response = await axios.get(url);\n\t\t\tsetState(prevState => ({ ...prevState, products: response.data }));\n\t\t\tsetIsLoading(false);\n\t\t}\n\n\t\tfetchProducts();\n\t}, []);\n\n\tconst updateCount = (id, isChecked) => {\n\t\tsetState(prevState => ({\n\t\t\tproducts: prevState.products.map(item =>\n\t\t\t\titem.id === id ? { ...item, checked: isChecked } : item\n\t\t\t)\n\t\t}));\n\t};\n\n\tconst infoLink = <a href='/'>How do i get the source products ID</a>;\n\n\tconst selectedProducts = state.products.filter(item => item.checked);\n\treturn (\n\t\t<ThemeProvider theme={defaultTheme}>\n\t\t\t<Spin tip='Loading...' spinning={isLoading}>\n\t\t\t\t<FlexWrapper>\n\t\t\t\t\t<h1>{state.products.length} Untracked products in my store</h1>\n\t\t\t\t\t<FullHeightTabs\n\t\t\t\t\t\tdefaultActiveKey='1'\n\t\t\t\t\t\tanimated={false}\n\t\t\t\t\t\ttabBarExtraContent={infoLink}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\tflexFlow: 'column nowrap',\n\t\t\t\t\t\t\tflexGrow: 1\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TabPane tab='Manual Add' key='1'>\n\t\t\t\t\t\t\t<ProductList\n\t\t\t\t\t\t\t\tproducts={state.products}\n\t\t\t\t\t\t\t\tupdateCount={updateCount}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Footer>\n\t\t\t\t\t\t\t\t<StyledButton\n\t\t\t\t\t\t\t\t\ttype='primary'\n\t\t\t\t\t\t\t\t\tonClick={() => console.log(selectedProducts)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t\t{selectedProducts.length\n\t\t\t\t\t\t\t\t\t\t? `(${selectedProducts.length})`\n\t\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t\t</StyledButton>\n\t\t\t\t\t\t\t</Footer>\n\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t\t<TabPane tab='Add From CSV' key='2'>\n\t\t\t\t\t\t\t<FileUploader />\n\t\t\t\t\t\t\t<Footer>\n\t\t\t\t\t\t\t\t<StyledButton type='primary'>Next</StyledButton>\n\t\t\t\t\t\t\t</Footer>\n\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t</FullHeightTabs>\n\t\t\t\t</FlexWrapper>\n\t\t\t</Spin>\n\t\t\t<GlobalStyle />\n\t\t</ThemeProvider>\n\t);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}